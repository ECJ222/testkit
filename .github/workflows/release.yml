name: Build and Release

on:
  push:
    branches:
      - buil-test

jobs:
  build:
    name: Build for multiple platforms
    runs-on: ubuntu-latest

    steps:
      - name: Set up Rust
        uses: actions/checkout@v2
      - name: Install Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - name: Configure Rust
        run: source $HOME/.cargo/env
      - name: Build for Linux
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Build for macOS
        run: cargo build --release --target x86_64-apple-darwin
      - name: Build for Windows
        run: cargo build --release --target x86_64-pc-windows-gnu

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set up Git
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: Release v1.0.0
          body: |
            Describe your release notes here
          draft: false
          prerelease: false
      - name: Upload Linux Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-unknown-linux-gnu/release/your_app_name
          asset_name: your_app_name-linux
          asset_content_type: application/octet-stream
      - name: Upload macOS Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-apple-darwin/release/your_app_name
          asset_name: your_app_name-macos
          asset_content_type: application/octet-stream
      - name: Upload Windows Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-pc-windows-gnu/release/your_app_name.exe
          asset_name: your_app_name-windows.exe
          asset_content_type: application/octet-stream
