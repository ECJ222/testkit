name: Build and Release CLI
on:
  push:
    branches:
      - buil-test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - name: Build for Linux
        run: cargo build --release --target x86_64-unknown-linux-gnu
        env:
          OUTPUT_DIR: cli-linux

      - name: Build for Windows
        run: cargo build --release --target x86_64-pc-windows-gnu
        env:
          OUTPUT_DIR: cli-windows

      - name: Build for macOS
        run: cargo build --release --target x86_64-apple-darwin
        env:
          OUTPUT_DIR: cli-macos

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cli
          path: ${{ env.OUTPUT_DIR }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: cli

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: Release 1.0.0
          draft: false
          prerelease: false

      - name: Upload CLI for Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cli-linux/cli
          asset_name: cli-linux
          asset_content_type: application/octet-stream

      - name: Upload CLI for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cli-windows/cli.exe
          asset_name: cli-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload CLI for macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cli-macos/cli
          asset_name: cli-macos
          asset_content_type: application/octet-stream
