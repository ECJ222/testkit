---
- name: stage1
  stages:
    - request:
        POST: http://localhost:3000/todos
        headers:
          Content-Type: application/json
        json:
          number: 5
      asserts:
        is_true: $.resp.json.number == 5
        is_true: $.resp.status == 201
        is_false: $.resp.json.number != 5
        is_number: $.resp.json.number
      outputs: null

- name: TODO api testing
  stages:
    - name: fetches TODO items - GET
      request:
        GET: http://localhost:3000/todos
      asserts:
        is_true: $.resp.status == 200
        is_array: $.resp.json.tasks
        is_true: $.resp.json.tasks[0] == "task one"
        is_number: $.resp.json.tasks[1]
        is_empty: $.resp.json.empty_str
        is_empty: $.resp.json.empty_arr
        is_null: $.resp.json.resp_null

    - name:  TODO ad items - POST
      request:
        POST: http://localhost:3000/todos
        headers:
            Content-Type: application/json
        json:
          task: "run tests"
      asserts:
        is_true: $.resp.status == 201
      outputs:
        todoItem: $.resp.json.id

    - name: deletes TODO items - DELETE
      request:
        DELETE: "http://localhost:3000/todos/{{$.stages[1].outputs.todoItem}}"
      asserts:
        #is_true: $.resp.body.json.id == {{$.stages[1].outputs.todoItem}}
        is_string: $.resp.json.task
        is_number: $.resp.json.id

    - name: Adds Todo item - POST
      request:
        POST: http://localhost:3000/todos/
        json:
          task: "run tests"
      asserts:
        is_true: $.resp.status_code == 201
        is_true: $.resp.json.task == "run tests"
        #is_false: $.resp.json.completed
